@mixin reset-link() {
  line-height: normal;

  text-decoration: none;

  border-bottom: 1px solid;
}

@mixin reset-link-styles {
  color: inherit;
  text-decoration: none;

  &:hover {
  }
}

@mixin reset-link-no-bd() {
  line-height: normal;

  text-decoration: none;
}

@mixin pseudo-elem() {
  position: absolute;

  display: block;

  content: '';
}

@mixin tri-r($color, $width, $height) {
  border-top: $height / 2 + px solid transparent;
  border-bottom: $height / 2 + px solid transparent;
  border-left: $width + 0 + px solid $color;
  transform-origin: $width $height/2;
}

@mixin tri-l($color, $width, $height) {
  border-top: $height + px solid transparent;
  border-right: $width + px solid $color;
  border-bottom: $height / 2 + px solid transparent;
  transform-origin: $width $height/2;
}

@mixin tri-t($color, $width, $height) {
  border-right: $width + px solid transparent;
  border-bottom: $height + px solid $color;
  border-left: $width + px solid transparent;
  transform-origin: $width $height/2;
}

@mixin tri-b($color, $width, $height) {
  border-top: $height solid $color;
  border-right: $width solid transparent;
  border-left: $width solid transparent;
  transform-origin: $width $height/2;
}

@mixin reset-ul {
  margin: 0;
  padding: 0;

  list-style-type: none;
}

@mixin resetInput {
  border: none;
  &:focus {
    outline: none;
    box-shadow: 0 0 10px #eeeeee;
  }

  &:required,
  &:invalid {
    box-shadow: none;
  }
}

@mixin resetButton {
  padding: 0;

  cursor: pointer;
  text-align: center;

  border: none;
  background-color: transparent;
  box-shadow: none;

  text-decoration: none;

  &:focus {
    outline: none;
    box-shadow: 0 0 10px #eeeeee;
  }
}

@mixin makeCircle($width, $height, $bg) {
  display: inline-flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;

  width: $width;
  height: $height;

  border-radius: 50%;

  background-color: $bg;
}

@mixin highlighted($color) {
  box-shadow: 0px 8px 15px transparentize($color, 0.8),
  0px 4px 4px transparentize($color, 0.9);
}

@mixin colorizeButton($background-color, $text-color) {
  background-color: $background-color;

  & .button__icon {
    fill: $text-color;
  }

  & .button__text {
    color: $text-color;
  }

  &:hover {
    background-color: darken(adjust-hue($background-color, -2), 4%);
    @include highlighted($background-color);
  }

  &.button--hollow {
    border-color: $background-color;

    background-color: transparent;

    & .button__text {
      color: $background-color;
    }

    & .button__icon {
      fill: $background-color;
    }

    &:after {
      background-color: $background-color;
    }

    &:hover {
      background-color: transparentize($background-color, 0.97);
      //  & .button__text {
      //    color: $text-color;
      //  }

      & .button__icon {
        fill: $text-color;
      }
    }
  }

  &[disabled], &.disabled {
    &:hover {
      background-color: $background-color;
      color: $text-color;
      box-shadow: none;
    }
  }
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    /* Firefox 18- */
    color: $color;
  }

  &::-moz-placeholder {
    /* Firefox 19+ */
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}

@mixin for-phone-only {
  @media (max-width: $phone-to) {
    @content;
  }
}

@mixin for-phone-up {
  @media (min-width: $phone-from) {
    @content;
  }
}

@mixin for-tablet-portrait-up {
  @media (min-width: $tablet-portrait) {
    @content;
  }
}

@mixin for-tablet-landscape-up {
  @media (min-width: $tablet-landscape) {
    @content;
  }
}

@mixin for-desktop-up {
  @media (min-width: $desktop) {
    @content;
  }
}

@mixin for-big-desktop-up {
  @media (min-width: $big-desktop) {
    @content;
  }
}

@mixin bg-cover {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin contain {
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}

@mixin dflex {
  display: flex;
  flex-wrap: wrap;
}

@mixin dflex-center {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

@mixin resetGridItem {
  display: block;
  flex-basis: auto;

  width: auto;
  max-width: 100%;
}

@mixin wrapper {
  width: 100%;
  max-width: $wrapper-width;

  margin-left: auto;
  margin-right: auto;
}

@mixin textShadow {
  text-shadow: 1px 1px rgba(0, 0, 0, 0.15);
}

@mixin section {
  //position: relative;
  @include for-phone-only {
    text-align: center;
  }

  @include for-phone-up {
    padding-left: 15px;
    padding-right: 15px;
  }

  @include for-tablet-landscape-up {
    padding-left: 25px;
    padding-right: 25px;
  }
}

@mixin shadow {
  box-shadow: 0 10px 16px -6px rgba(0, 0, 0, .08);
}

@mixin highlighted($color) {
  box-shadow: 0px 8px 15px transparentize($color, 0.8),
  0px 4px 4px transparentize($color, 0.9);
}

@mixin invShadow {
  box-shadow: 0 -10px 16px -6px rgba(0, 0, 0, .08);
}

@mixin mobileMenuButton {
  @include resetButton;

  @include for-phone-up {
    padding-right: 12px;
    padding-top: 10px;
    padding-bottom: 10px;

    fill: $dark-gray;

    & > * {
      height: 100%;
    }
  }

  @include for-tablet-landscape-up {
    display: none;
  }
}

@mixin navigationLandscapeUpBehavior {
  @include for-tablet-landscape-up {
    position: static;

    height: auto;
    width: auto;

    overflow: inherit;

    background-color: transparent;

    padding: 0 15px 0 0;
  }
}

@mixin h2 {
  font-size: 24px;
  line-height: 1.5em;

  font-weight: 600;

  @include for-tablet-landscape-up {
    font-size: 32px;
  }
}

@mixin blockBase {
  border: 1px solid $border;
  border-radius: $cards-bdrs;
  overflow: hidden;

  box-shadow: 0 0 0 0 transparent;
}

@mixin marginTop($margins:60px) {
  margin-top: $margins;
  //
  //@include for-tablet-landscape-up {
  //  margin-top: $margins;
  //}
}

@mixin smMarginTop($margins:30px) {
  margin-top: $margins/2;

  //@include for-tablet-landscape-up {
  //  margin-top: $margins;
  //}
}

@mixin paddingTop {
  padding-top: 60px;

  //@include for-tablet-landscape-up {
  //padding-top: 60px;
  //}
}

@mixin coloredBlockIndents($margins:60px) {
  padding-top: 30px;
  padding-bottom: 30px;

  @include for-tablet-landscape-up {
    padding-top: 60px;
    padding-bottom: 60px;
  }
}

@mixin smallColoredBlockIndents($margins:30px) {
  padding-top: 20px;
  padding-bottom: 20px;

  @include for-tablet-landscape-up {
    padding-top: 30px;
    padding-bottom: 30px;
  }
}

@mixin smPaddingTop {
  padding-top: 20px;

  @include for-tablet-landscape-up {
    padding-top: 32px;
  }
}

$columns: 12;
@mixin col($num) {
  width: 100% / $columns * $num;
}

@mixin f-col($num) {
  flex-basis: 100% / $columns * $num;
}

@mixin coloriseIcon($color) {
  & svg {
    fill: $color;
  }

  .icon__text {
    color: $color;
  }
}

@mixin cardHover($c) {
  transition: transform $transition-time, box-shadow $transition-time;

  &:hover {
    transform: translateY(-2px);
    @include shadow;

    & #{$c}__button {
      background-color: darken(adjust-hue($light-blue, -2), 4%);
      border-radius: 0;
      transition: none;
    }
  }
}

@mixin changeProgrammColor($color, $c) {
  @include for-tablet-landscape-up {

    #{$c}__picture-area {
      background-color: $color;
    }

    #{$c}__icon {
      border-color: darken($color, 10%);
    }
  }
}